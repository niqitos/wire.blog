[{"data":1,"prerenderedAt":1377},["ShallowReactive",2],{"search":3,"$Qv2-HRLKSU":195},[4,10,16,21,26,31,36,41,46,51,56,61,66,71,76,81,85,89,92,95,98,101,106,111,116,121,126,131,136,141,146,151,156,161,166,171,176,181,186,191],{"id":5,"title":6,"titles":7,"content":8,"level":9},"/1-pochatok-roboty-z-esp32","Початок роботи з ESP32",[],"Стаття призначена для тих, хто тільки починає знайомство з платою розробки ESP32. Якщо ви знайомі з ESP8266, ESP32 це його вдосконалена версія. Плата поєднує бездротові можливості Wi-Fi та Bluetooth та двоядерний процесор.",1,{"id":11,"title":12,"titles":13,"content":14,"level":15},"/1-pochatok-roboty-z-esp32#esp32-devkit-v1","ESP32 DEVKIT V1",[6],"У статті розглядається ESP32 DEVKIT V1. Але всі приклади сумісні з іншими плата розробки ESP32 на чіпі ESP-WROOM-32. Приклади плат ESP32:",2,{"id":17,"title":18,"titles":19,"content":20,"level":15},"/1-pochatok-roboty-z-esp32#яку-esp32-вибрати","Яку ESP32 вибрати",[6],"Характеристики Кількість ядер2 (Dual Core)Тактова частотадо 240 МГцАрхітектура32-bitRAM512 КБWi-Fi2.4 ГГц, до 150 Мбіт/сBluetoothBLE (Bluetooth Low Energy) та Legacy BluetoothКількість пінів введення/виводу (GPIO)30 або 36 в залежності від моделіПериферіяАЦП (аналого-цифровий перетворювач), ЦАП (цифро-аналоговий перетворювач), UART (універсальний асинхронний приймач), SPI (послідовний периферійний інтерфейс), I2C (послідовна асиметрична шина) та багато іншого.",{"id":22,"title":23,"titles":24,"content":25,"level":15},"/1-pochatok-roboty-z-esp32#середовище-розробки","Середовище розробки",[6],"ESP32 можна програмувати за допомогою: Arduino IDEEspressif IDF (IoT Development Framework)MicropythonJavaScriptLUA",{"id":27,"title":28,"titles":29,"content":30,"level":15},"/1-pochatok-roboty-z-esp32#підготовка-до-роботи-з-esp32-в-середовищі-arduino-ide","Підготовка до роботи з ESP32 в середовищі Arduino IDE",[6],"Інструкція для Windows Інструкція для Mac and Linux",{"id":32,"title":33,"titles":34,"content":35,"level":15},"/1-pochatok-roboty-z-esp32#розпіновка-esp32","Розпіновка ESP32",[6],"ESP32 має більше контактів GPIO з більшою функціональністю в порівнянні з ESP826. У програмному коді можна встановити режим роботи GPIO пінів: UART, I2C або SPI. Це можливо завдяки функції мультиплексування мікросхеми ESP32, яка дозволяє призначати кілька функцій одному й тому висновку. Якщо їх не встановити в коді, контакти будуть використовуватися за умовчанням, як показано на малюнку нижче (розташування контактів може змінюватися залежно від виробника). Версія з 30 панами входу/виходу Версія з 36 панами входу/виходу Розпіновка ESP32: Які GPIO піни слід використовувати?",{"id":37,"title":38,"titles":39,"content":40,"level":15},"/1-pochatok-roboty-z-esp32#завантаження-коду-програми-в-esp32-через-arduino-ide","Завантаження коду програми в ESP32 через Arduino IDE",[6],"Розглянемо простий приклад миготіння вбудованим світлодіодом. Відкрийте Arduino IDE на своєму комп'ютері та скопіюйте наступний код: // світлодіод на ESP32 під'єднано до GPIO 23\nconst int ledPin = 23;\n\n// функція setup виконується один раз під час підключення живлення або перезавантаження плати\nvoid setup () {\n  // ініціалізація режиму роботи цифрового піна ledPin як вихідний\n  pinMode(ledPin, OUTPUT);\n}\n\n// функція loop виконується нескінченну кількість разів по колу\nvoid loop () {\n  digitalWrite(ledPin, HIGH);  // подаємо цифровий сигнал високого рівня (HIGH) на пін ledPin, тобто включаємо світлодіод\n  delay(1000); // чекаємо 1 секунду\n  digitalWrite(ledPin, LOW); // подаємо сигнал низького рівня (LOW), тобто вимикаємо світлодіод\n  delay(1000); // чекаємо 1 секунду\n} Цей код включає та вимикає світлодіод, підключений до GPIO 23 з інтервалом в одну секунду.",{"id":42,"title":43,"titles":44,"content":45,"level":15},"/1-pochatok-roboty-z-esp32#ускладнимо-приклад","Ускладнимо приклад",[6],"Крім увімкнення/вимкнення вбудованого піна, можна під'єднати зовнішній світлодіод до порту 23. Важливо! Завжди перевіряйте розпіновка вашої плати перед підключенням. Для цієї збірки знадобиться: Плата ESP32 DEVKIT V15 мм світлодіодРезистор на 330 ОмДжампериМакетна плата (необов'язково) Після підключення всіх компонентів під'єднайте ESP32 до комп'ютера та дотримуйтесь інструкцій: Перейдіть до меню Інструменти > Плата. Знайдіть розділ ESP32 і виберіть плату ESP32, наприклад ESP32 DEVKIT V1.У меню Інструменти > Порт  виберіть порт, до якого під'єднано ESP32. Якщо ви не впевнені в назві порту, від'єднайте плату і перевірте, який порт зник зі списку.Натисніть Завантажити.",{"id":47,"title":48,"titles":49,"content":50,"level":15},"/1-pochatok-roboty-z-esp32#демонстрація","Демонстрація",[6],"Після завантаження коду, вбудований світлодіод, підключений до GPIO 23, блиматиме з інтервалом в 1 секунду.",{"id":52,"title":53,"titles":54,"content":55,"level":15},"/1-pochatok-roboty-z-esp32#можливі-помилки","Можливі помилки",[6],"Failed to connect to ESP32: Timed out... Connecting... Передусім переконайтеся, що в налаштуваннях Arduino IDE вибрано правильну плату та порт. Якщо помилка не зникла, це означає, що плата ESP32 не знаходиться в режимі перепрошивки/завантаження. Щоб завантажити код у такій ситуації, виконайте такі кроки: Затисніть кнопку BOOT на платі ESP32Після того, як ви побачите повідомлення Connecting…. у консолі Arduino IDE, відпустіть палець із кнопки BOOT:Після цього ви маєте побачити повідомлення Done uploading. Після завантаження скетчу натисніть кнопку ENABLE для перезавантаження ESP32.",{"id":57,"title":58,"titles":59,"content":60,"level":15},"/1-pochatok-roboty-z-esp32#на-завершення","На завершення",[6],"Миготіння світлодіодом - це простий проєкт, який допоможе вам почати працювати з ESP32 і дізнатися, як завантажувати прошивку в плату. html pre.shiki code .sW2Sy, html code.shiki .sW2Sy{--shiki-default:#A0A1A7;--shiki-default-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic}html pre.shiki code .sLKXg, html code.shiki .sLKXg{--shiki-default:#A626A4;--shiki-dark:#C678DD}html pre.shiki code .s5ixo, html code.shiki .s5ixo{--shiki-default:#383A42;--shiki-dark:#ABB2BF}html pre.shiki code .sAGMh, html code.shiki .sAGMh{--shiki-default:#986801;--shiki-dark:#D19A66}html pre.shiki code .sAdtL, html code.shiki .sAdtL{--shiki-default:#4078F2;--shiki-dark:#61AFEF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"id":62,"title":63,"titles":64,"content":65,"level":9},"/2-vstanovlennya-platy-esp32-v-arduino-ide-na-windows","Установка Плати ESP32 В Arduino IDE На Windows",[],"У цьому посібнику ми розповімо, як встановити плату ESP32 в Arduino IDE для Windows Якщо ви використовуєте Mac OS або Linux, дотримуйтесь цього інструкції.",{"id":67,"title":68,"titles":69,"content":70,"level":15},"/2-vstanovlennya-platy-esp32-v-arduino-ide-na-windows#установка-arduino-ide","Установка Arduino IDE",[63],"Завантажити установник можна з офіційного сайту arduino.cc/en/software",{"id":72,"title":73,"titles":74,"content":75,"level":15},"/2-vstanovlennya-platy-esp32-v-arduino-ide-na-windows#установка-esp32","Установка ESP32",[63],"Щоб встановити плату ESP32 у IDE Arduino, виконайте такі дії: Відкрийте вікно налаштувань в Arduino IDE, перейшовши в Файл > УстановкиУ полі Additional Board Manager URLs введіть наступне: https://dl.espressif.com/dl/package_esp32_index.json Натисніть ОК: Якщо у вас вже є URL-адреса плат ESP8266, ви вказати їх через кому: https://dl.espressif.com/dl/package_esp32_index.json, http://arduino.esp8266.com/stable/package_esp8266com_index.json Відкрийте менеджер плат, перейшовши в Інструменти > Плата > Диспетчер Плат…У рядку пошуку введіть ESP32 і натисніть Встановити навпроти ESP32 by Espressif SystemsГотово. Установка триватиме кілька секунд.",{"id":77,"title":78,"titles":79,"content":80,"level":15},"/2-vstanovlennya-platy-esp32-v-arduino-ide-na-windows#налаштування","Налаштування",[63],"Підключіть плату ESP32 до комп'ютера та виконайте такі дії: Відкрийте Arduino IDEОберіть свою плату в меню Інструменти > Плата (в моєму випадку це плата ESP32 DEVKIT V1)Оберіть порт. Якщо ви не бачите COM-порт в Arduino IDE, необхідно встановити ESP32 CP210x USB на UART Bridge VCP Drivers:Відкрийте наступний приклад у меню Файл > Приклади > WiFiScan.Відкриється новий скетч:Натисніть Завантажити до Arduino IDE. Зачекайте кілька секунд, поки код компілюється та завантажується у плату.Якщо все гаразд, ви повинні побачити повідомлення Done uploadingВідкрийте монітор серійного порту Arduino IDE і встановіть швидкість 115200 бод: Натисніть EN на платі ESP32, і ви побачите мережі, доступні поряд з ESP32:",{"id":82,"title":58,"titles":83,"content":84,"level":15},"/2-vstanovlennya-platy-esp32-v-arduino-ide-na-windows#на-завершення",[63],"Це простий посібник, який ілюструє, як підготувати ваш Arduino IDE для роботи з ESP32 на ПК з Windows.",{"id":86,"title":87,"titles":88,"content":65,"level":9},"/3-vstanovlennya-platy-esp32-v-arduino-ide-na-mac-os-x-i-linux","Установка плати ESP32 в Arduino IDE на Mac OS X та Linux",[],{"id":90,"title":68,"titles":91,"content":70,"level":15},"/3-vstanovlennya-platy-esp32-v-arduino-ide-na-mac-os-x-i-linux#установка-arduino-ide",[87],{"id":93,"title":73,"titles":94,"content":75,"level":15},"/3-vstanovlennya-platy-esp32-v-arduino-ide-na-mac-os-x-i-linux#установка-esp32",[87],{"id":96,"title":78,"titles":97,"content":80,"level":15},"/3-vstanovlennya-platy-esp32-v-arduino-ide-na-mac-os-x-i-linux#налаштування",[87],{"id":99,"title":58,"titles":100,"content":84,"level":15},"/3-vstanovlennya-platy-esp32-v-arduino-ide-na-mac-os-x-i-linux#на-завершення",[87],{"id":102,"title":103,"titles":104,"content":105,"level":9},"/4-rozpynuvannya-esp32","Розпінування ESP32",[],"ESP32 — популярний мікроконтролер із вбудованим Wi-Fi та Bluetooth, використовується в IoT-проектах. Для успішної роботи з платою важливо розуміти призначення її контактів. Чіп ESP32 оснащений 48 мультифункціональними контактами. Не всі контакти доступні на всіх платах ESP32 і деякі контакти не можна використовувати. На малюнку нижче показано розпіновку чіпа ESP-WROOM-32. Використовуйте його як довідковий матеріал, якщо ви використовуєте голу мікросхему ESP32 для складання власної плати: Не всі GPIO доступні на всіх платах розробки, але кожен конкретний GPIO працює однаково, незалежно від плати розробки, що використовується. Якщо ви починаєте працювати з ESP32, рекомендуємо прочитати наше керівництво: Початок роботи з платою розробки ESP32.",{"id":107,"title":108,"titles":109,"content":110,"level":15},"/4-rozpynuvannya-esp32#периферія-esp32","Периферія ESP32",[103],"18 каналів аналого-цифрового перетворювача (АЦП)3 інтерфейси SPI3 інтерфейси UART2 інтерфейси I2C16 вихідних каналів ШІМ2 цифро-аналогові перетворювачі (ЦАП)2 інтерфейси I2S10 ємнісних датчиків GPIO Функції АЦП (аналого-цифровий перетворювач) та ЦАП (цифро-аналоговий перетворювач) призначаються певним статичним контактам. Тим не менш, в коді програми ви можете призначити якісь контакти як UART, I2C, SPI, PWM і т. д. Це можливо завдяки функції мультиплексування чіпа ESP32. Хоча ви можете визначати властивості контактів у програмному забезпеченні, є контакти, призначені за замовчуванням, як показано на малюнку (це приклад плати ESP32 DEVKIT V1 DOIT з 36 контактами — розташування контактів може змінюватися в залежності від виробника). Крім того, є контакти з певними функціями, які роблять їх відповідними або не підходящими для конкретного проекту. У наступній таблиці показано, які контакти найкраще використовувати як входи, виходи, а з якими слід бути обережними. Контакти, виділені зеленим, підходять для використання. Ті, що виділені жовтим кольором, підходять для використання, але на них варто звернути увагу, оскільки вони можуть мати несподівану поведінку, в основному при завантаженні. Контакти, виділені червоним, не рекомендується використовувати як входи або виходи. GPIOВведенняКонтактОсобливості0підключений через підтягуючий резисторOKвиводить ШІМ сигнал під час завантаження1TX пінOKналагоджувальний контакт під час завантаження2OKOKпідключений до вбудованого світлодіода, повинен залишатися плаваючим або перебувати у стані LOW для переходу в режим миготіння3OKRX пінвиводить сигнал високого рівня під час завантаження4OKOK5OKOKвиводить ШИМ сигнал під час завантаження.6XXпідключений до вбудованої флеш-пам'яті SPI7XXпідключений до вбудованої флеш-пам'яті SPI8XXпідключений до вбудованої флеш-пам'яті SPI9XXпідключений до вбудованої флеш-пам'яті SPI10XXпідключений до вбудованої флеш-пам'яті SPI11XXпідключений до вбудованої флеш-пам'яті SPI12OKOKESP32 не завантажується, якщо вхід підтягнутий до HIGH, що з'єднує контакт13OKOK14OKOKвиводить ШІМ сигнал під час завантаження15OKOKвиводить ШІМ сигнал під час завантаження16OKOK17OKOK18OKOK19OKOK21OKOK22OKOK23OKOK25OKOK26OKOK27OKOK32OKOK33OKOK34OKлише вхід35OKлише вхід36OKлише вхід39OKлише вхід",{"id":112,"title":113,"titles":114,"content":115,"level":15},"/4-rozpynuvannya-esp32#піни-входу","Піни входу",[103],"GPIOs 34-39 є GPI - тобто працюють тільки в режимі введення, так як вони не оснащені резистором, що підтягує. GPIO 34GPIO 35GPIO 36GPIO 39",{"id":117,"title":118,"titles":119,"content":120,"level":15},"/4-rozpynuvannya-esp32#spi-flash-на-esp-wroom-32","SPI flash на ESP-WROOM-32",[103],"GPIO з 6 по 11 мають контакти на деяких платах розробки ESP32, але ці контакти приєднані до вбудованого модуля SPI flash на чіпі ESP-WROOM-32 і не рекомендується використовувати їх з іншою метою. GPIO 6 (SCK/CLK)GPIO 7 (SDO/SD0)GPIO 8 (SDI/SD1)GPIO 9 (SHD/SD2)GPIO 10 (SWP/SD3)GPIO 11 (CSC/CMD)",{"id":122,"title":123,"titles":124,"content":125,"level":15},"/4-rozpynuvannya-esp32#gpio-з-підтримкою-ємнісного-дотику","GPIO з підтримкою ємнісного дотику",[103],"ESP32 обладнана 10 ємнісними сенсорами торкання. Ці датчики можуть вловлювати зміни у будь-чому, що має електричний заряд, наприклад, у шкірі людини. Таким чином, вони можуть виявляти зміни, що виникають при дотику пальцем контактів GPIO. Ці контакти легко інтегруються в ємнісні контактні майданчики та замінюють механічні кнопки. Ємнісні сенсорні контакти можна використовувати для виведення ESP32 з режиму глибокого сну.\nЦі внутрішні датчики торкання підключені до цих контактів GPIO: T0 (GPIO 4)T1 (GPIO 0)T2 (GPIO 2)T3 (GPIO 15)T4 (GPIO 13)T5 (GPIO 12)T6 (GPIO 14)T7 (GPIO 27)T8 (GPIO 33)T9 (GPIO 32)",{"id":127,"title":128,"titles":129,"content":130,"level":15},"/4-rozpynuvannya-esp32#аналого-цифровий-перетворювач-ацп","Аналого-цифровий перетворювач (АЦП)",[103],"ESP32 має 18 вхідних 12-бітових каналів АЦП (тоді як ESP8266 має лише 1 10-бітний АЦП). Нижче перераховані GPIO, які можна використовувати як АЦП, і з відповідні канали: ADC1_CH0 (GPIO 36)ADC1_CH1 (GPIO 37)ADC1_CH2 (GPIO 38)ADC1_CH3 (GPIO 39)ADC1_CH4 (GPIO 32)ADC1_CH5 (GPIO 33)ADC1_CH6 (GPIO 34)ADC1_CH7 (GPIO 35)ADC2_CH0 (GPIO 4)ADC2_CH1 (GPIO 0)ADC2_CH2 (GPIO 2)ADC2_CH3 (GPIO 15)ADC2_CH4 (GPIO 13)ADC2_CH5 (GPIO 12)ADC2_CH6 (GPIO 14)ADC2_CH7 (GPIO 27)ADC2_CH8 (GPIO 25)ADC2_CH9 (GPIO 26) Примітка: контакти АЦП2 не можна використовувати під час використання Wi-Fi. Тому, якщо ви використовуєте Wi-Fi і у вас виникають проблеми з отриманням значення з виходу АЦП2 GPIO, спробуйте використати замість нього вихід АЦП1 GPIO — це має вирішити проблему. Вхідні канали АЦП мають роздільну здатність 12 біт. Це означає, що ви можете отримувати аналогові показання в діапазоні від 0 до 4095, де 0 відповідає 0, а 4095 - 3,3 В. Ви також можете задати дозвіл каналів в коді, а також діапазон АЦП. Висновки АЦП ESP32 немає лінійного поведінки. Ви, ймовірно, не зможете відрізнити 0 від 0,1 або 3,2 від 3,3 В. Це необхідно враховувати при використанні контактів АЦП. Ви отримаєте поведінку, схожу на показану на наступному малюнку.",{"id":132,"title":133,"titles":134,"content":135,"level":15},"/4-rozpynuvannya-esp32#цифро-аналоговий-перетворювач-цап","Цифро-аналоговий перетворювач (ЦАП)",[103],"ESP32 має два 8-бітових канали ЦАП для перетворення цифрових сигналів в аналогові вихідні сигнали напруги. Канали ЦАП: DAC1 (GPIO25)DAC2 (GPIO26)",{"id":137,"title":138,"titles":139,"content":140,"level":15},"/4-rozpynuvannya-esp32#rtc-gpios","RTC GPIOs",[103],"ESP32 підтримує RTC GPIO. Висновки GPIO, підключені до RTC з низьким енергоспоживанням, можуть використовуватися, коли ESP32 знаходиться в режимі глибокого сну. Ці RTC GPIO можна використовувати для виведення ESP32 із режиму глибокого сну під час роботи співпроцесора з ультранизким енергоспоживанням (ULP). Наступні контакти GPIO можна використовувати як зовнішнє джерело пробудження: RTC_GPIO0 (GPIO36)RTC_GPIO3 (GPIO39)RTC_GPIO4 (GPIO34)RTC_GPIO5 (GPIO35)RTC_GPIO6 (GPIO25)RTC_GPIO7 (GPIO26)RTC_GPIO8 (GPIO33)RTC_GPIO9 (GPIO32)RTC_GPIO10 (GPIO4)RTC_GPIO11 (GPIO0)RTC_GPIO12 (GPIO2)RTC_GPIO13 (GPIO15)RTC_GPIO14 (GPIO13)RTC_GPIO15 (GPIO12)RTC_GPIO16 (GPIO14)RTC_GPIO17 (GPIO27)",{"id":142,"title":143,"titles":144,"content":145,"level":15},"/4-rozpynuvannya-esp32#широтно-імпульсна-модуляція-шім","Широтно-імпульсна модуляція (ШІМ)",[103],"Контролер світлодіодів ESP32 із ШІМ має 16 незалежних каналів, які можна налаштувати для генерації ШІМ-сигналів із різними характеристиками. Усі контакти, які можуть працювати як виходи, можуть використовуватися як контакти ШІМ (контакти GPIO з 34 до 39 не підтримують генерацію ШІМ). Для встановлення ШИМ-сигналу необхідно визначити такі параметри в коді: частота сигналу;коефіцієнт заповнення;канал ШІМ;Порт GPIO, який ви хочете подати сигнал.",{"id":147,"title":148,"titles":149,"content":150,"level":15},"/4-rozpynuvannya-esp32#i2c","I2C",[103],"При використанні ESP32 з Arduino IDE слід використовувати стандартні контакти ESP32 I2C (підтримувані бібліотекою Wire): GPIO 21 (SDA)GPIO 22 (SCL)",{"id":152,"title":153,"titles":154,"content":155,"level":15},"/4-rozpynuvannya-esp32#serial-peripheral-interface-spi","Serial Peripheral Interface (SPI)",[103],"За промовчанням призначення контактів для SPI: SPIMOSIMISOCLKCSVSPIGPIO 23GPIO 19GPIO 18GPIO 5HSPIGPIO 13GPIO 12GPIO 14GPIO 15",{"id":157,"title":158,"titles":159,"content":160,"level":9},"/4-rozpynuvannya-esp32#uart","UART",[],"ESP32 підтримує до трьох інтерфейсів UART: UART0, UART1 і UART2, залежно від моделі плати ESP32, що використовується. Порт UART0 зазвичай резервується для зв'язку з послідовним монітором під час завантаження та налагодження. Однак його також можна використовувати для зв'язку з іншими пристроями після завантаження коду, якщо монітор не потрібен.\nUART1 та UART2: доступні для зв'язку із зовнішніми пристроями.\nЯк і I2C і SPI, ці контакти UART можна призначити будь-якому контакту GPIO ESP32. Однак, на більшості моделей плат вони мають стандартне призначення контактів.\nДля більшості плат ESP32 призначення контактів UART є наступним: UART PortTXRXRemarksUART0GPIO 1GPIO 3Used for Serial Monitor and uploading code; Can be assigned to other GPIOs;UART1GPIO 10GPIO 9Must be assigned to other GPIOsUART2GPIO 17GPIO 16Can be assigned to other GPIOs Що стосується UART1 (GPIO 9 і GPIO10), ці контакти GPIO підключені до флеш-пам'яті ESP32 SPI, тому використовувати їх не можна. Щоб використати UART1 для зв'язку з іншими пристроями, необхідно визначити інші контакти за допомогою бібліотеки HardwareSerial.",{"id":162,"title":163,"titles":164,"content":165,"level":15},"/4-rozpynuvannya-esp32#переривання","Переривання",[158],"Всі GPIO можна настроїти на переривання.",{"id":167,"title":168,"titles":169,"content":170,"level":15},"/4-rozpynuvannya-esp32#звязувальні-контакти","Зв'язувальні контакти",[158],"Чіп ESP32 має такі зв'язувальні контакти: GPIO 0GPIO 2GPIO 4GPIO 5GPIO 12GPIO 15 Вони використовуються для переведення ESP32 у режим завантажувача або прошивки. На більшості плат з вбудованим USB/послідовним портом вам не потрібно турбуватися про стан цих контактів. Плата сама переводить контакти в стан, необхідний для прошивки чи завантаження. Докладніше про вибір режиму завантаження ESP32 можна дізнатися тут. Однак, якщо до цих контактів підключено периферійні пристрої, можуть виникнути проблеми із завантаженням нового коду, прошивкою ESP32 або скиданням налаштувань плати. Якщо до цих контактів підключено периферійні пристрої, і виникають проблеми із завантаженням коду або прошивкою ESP32, можливо, ці пристрої заважають ESP32 перейти в потрібний режим. Ознайомтеся з документацією щодо вибору режиму завантаження, щоб дізнатися, як це зробити. Після скидання налаштувань, прошивки або завантаження ці контакти працюють як слід.",{"id":172,"title":173,"titles":174,"content":175,"level":15},"/4-rozpynuvannya-esp32#контакти-high-при-завантаженні","Контакти HIGH при завантаженні",[158],"Деякі GPIO змінюють стан на HIGH або виводять ШИМ-сигнали під час завантаження чи скидання. Це означає, що якщо до цих GPIO підключені виходи, ви можете отримати несподівані результати під час скидання або завантаження ESP32. GPIO 1GPIO 3GPIO 5GPIO 6–GPIO 11 (підключений до інтегрованої флеш-пам'яті SPI ESP32 – не рекомендується використовувати).GPIO 14GPIO 15",{"id":177,"title":178,"titles":179,"content":180,"level":15},"/4-rozpynuvannya-esp32#enable-en","Enable (EN)",[158],"Вивід «Enable» (EN) – це контакт увімкнення регулятора напруги 3,3 В. Він підтягнутий до потенціалу, тому для відключення регулятора напруги 3,3 В його слід підключити до заземлення. Це означає, що цей контакт можна використовувати, підключивши його до кнопки, наприклад, для перезапуску ESP32.",{"id":182,"title":183,"titles":184,"content":185,"level":15},"/4-rozpynuvannya-esp32#потужний-струм-gpio","Потужний струм GPIO",[158],"Абсолютний максимальний струм, споживаний кожним GPIO, становить 40 мА відповідно до розділу «Рекомендовані умови експлуатації» у технічному описі ESP32.",{"id":187,"title":188,"titles":189,"content":190,"level":15},"/4-rozpynuvannya-esp32#вбудований-датчик-холла-esp32","Вбудований датчик Холла ESP32",[158],"ESP32 також має вбудований датчик Холла, який виявляє зміни магнітного поля навколо нього.",{"id":192,"title":58,"titles":193,"content":194,"level":15},"/4-rozpynuvannya-esp32#на-завершення",[158],"Сподіваємося, цей довідковий посібник з GPIO-портів ESP32 був вам корисним. Якщо у вас є додаткові поради щодо GPIO-портів ESP32, будь ласка, поділіться ними в коментарях нижче.",{"path":102,"cover":196,"title":103,"description":197,"body":198,"date":1363,"tags":1364,"authors":1366,"readingTime":1370,"seo":1371},"/images/4/cover.webp","ESP32 — популярний мікроконтролер із вбудованим Wi-Fi та Bluetooth, використовується в IoT-проектах. Для успішної роботи з платою важливо розуміти призначення її контактів.",{"type":199,"value":200,"toc":1343},"minimark",[201,205,208,217,221,249,252,255,258,261,854,857,860,874,877,880,900,903,906,938,941,944,1000,1003,1006,1009,1012,1015,1023,1026,1029,1079,1082,1085,1088,1102,1105,1108,1116,1119,1122,1193,1197,1200,1203,1265,1268,1271,1273,1276,1279,1296,1299,1302,1305,1308,1323,1326,1328,1331,1333,1336,1338,1341],[202,203,204],"p",{},"Чіп ESP32 оснащений 48 мультифункціональними контактами. Не всі контакти доступні на всіх платах ESP32 і деякі контакти не можна використовувати.",[202,206,207],{},"На малюнку нижче показано розпіновку чіпа ESP-WROOM-32. Використовуйте його як довідковий матеріал, якщо ви використовуєте голу мікросхему ESP32 для складання власної плати:",[202,209,210,211,216],{},"Не всі GPIO доступні на всіх платах розробки, але кожен конкретний GPIO працює однаково, незалежно від плати розробки, що використовується. Якщо ви починаєте працювати з ESP32, рекомендуємо прочитати наше керівництво: ",[212,213,215],"a",{"href":214},"1-pochatok-roboty-z-esp32","Початок роботи з платою розробки ESP32",".",[218,219,108],"h2",{"id":220},"периферія-esp32",[222,223,224,228,231,234,237,240,243,246],"ul",{},[225,226,227],"li",{},"18 каналів аналого-цифрового перетворювача (АЦП)",[225,229,230],{},"3 інтерфейси SPI",[225,232,233],{},"3 інтерфейси UART",[225,235,236],{},"2 інтерфейси I2C",[225,238,239],{},"16 вихідних каналів ШІМ",[225,241,242],{},"2 цифро-аналогові перетворювачі (ЦАП)",[225,244,245],{},"2 інтерфейси I2S",[225,247,248],{},"10 ємнісних датчиків GPIO",[202,250,251],{},"Функції АЦП (аналого-цифровий перетворювач) та ЦАП (цифро-аналоговий перетворювач) призначаються певним статичним контактам. Тим не менш, в коді програми ви можете призначити якісь контакти як UART, I2C, SPI, PWM і т. д. Це можливо завдяки функції мультиплексування чіпа ESP32.",[202,253,254],{},"Хоча ви можете визначати властивості контактів у програмному забезпеченні, є контакти, призначені за замовчуванням, як показано на малюнку (це приклад плати ESP32 DEVKIT V1 DOIT з 36 контактами — розташування контактів може змінюватися в залежності від виробника).",[202,256,257],{},"Крім того, є контакти з певними функціями, які роблять їх відповідними або не підходящими для конкретного проекту. У наступній таблиці показано, які контакти найкраще використовувати як входи, виходи, а з якими слід бути обережними.",[202,259,260],{},"Контакти, виділені зеленим, підходять для використання. Ті, що виділені жовтим кольором, підходять для використання, але на них варто звернути увагу, оскільки вони можуть мати несподівану поведінку, в основному при завантаженні. Контакти, виділені червоним, не рекомендується використовувати як входи або виходи.",[262,263,264,292],"table",{},[265,266,267],"thead",{},[268,269,270,277,282,287],"tr",{},[271,272,273],"th",{},[274,275,276],"strong",{},"GPIO",[271,278,279],{},[274,280,281],{},"Введення",[271,283,284],{},[274,285,286],{},"Контакт",[271,288,289],{},[274,290,291],{},"Особливості",[293,294,295,317,336,354,373,390,408,427,444,461,478,495,512,530,547,564,581,598,615,632,649,666,683,700,717,734,751,768,785,803,820,837],"tbody",{},[268,296,297,303,309,314],{},[298,299,300],"td",{},[274,301,302],{},"0",[298,304,305],{},[306,307,308],"code",{},"підключений через підтягуючий резистор",[298,310,311],{},[306,312,313],{},"OK",[298,315,316],{},"виводить ШІМ сигнал під час завантаження",[268,318,319,324,329,333],{},[298,320,321],{},[274,322,323],{},"1",[298,325,326],{},[306,327,328],{},"TX пін",[298,330,331],{},[306,332,313],{},[298,334,335],{},"налагоджувальний контакт під час завантаження",[268,337,338,343,347,351],{},[298,339,340],{},[274,341,342],{},"2",[298,344,345],{},[306,346,313],{},[298,348,349],{},[306,350,313],{},[298,352,353],{},"підключений до вбудованого світлодіода, повинен залишатися плаваючим або перебувати у стані LOW для переходу в режим миготіння",[268,355,356,361,365,370],{},[298,357,358],{},[274,359,360],{},"3",[298,362,363],{},[306,364,313],{},[298,366,367],{},[306,368,369],{},"RX пін",[298,371,372],{},"виводить сигнал високого рівня під час завантаження",[268,374,375,380,384,388],{},[298,376,377],{},[274,378,379],{},"4",[298,381,382],{},[306,383,313],{},[298,385,386],{},[306,387,313],{},[298,389],{},[268,391,392,397,401,405],{},[298,393,394],{},[274,395,396],{},"5",[298,398,399],{},[306,400,313],{},[298,402,403],{},[306,404,313],{},[298,406,407],{},"виводить ШИМ сигнал під час завантаження.",[268,409,410,415,420,424],{},[298,411,412],{},[274,413,414],{},"6",[298,416,417],{},[306,418,419],{},"X",[298,421,422],{},[306,423,419],{},[298,425,426],{},"підключений до вбудованої флеш-пам'яті SPI",[268,428,429,434,438,442],{},[298,430,431],{},[274,432,433],{},"7",[298,435,436],{},[306,437,419],{},[298,439,440],{},[306,441,419],{},[298,443,426],{},[268,445,446,451,455,459],{},[298,447,448],{},[274,449,450],{},"8",[298,452,453],{},[306,454,419],{},[298,456,457],{},[306,458,419],{},[298,460,426],{},[268,462,463,468,472,476],{},[298,464,465],{},[274,466,467],{},"9",[298,469,470],{},[306,471,419],{},[298,473,474],{},[306,475,419],{},[298,477,426],{},[268,479,480,485,489,493],{},[298,481,482],{},[274,483,484],{},"10",[298,486,487],{},[306,488,419],{},[298,490,491],{},[306,492,419],{},[298,494,426],{},[268,496,497,502,506,510],{},[298,498,499],{},[274,500,501],{},"11",[298,503,504],{},[306,505,419],{},[298,507,508],{},[306,509,419],{},[298,511,426],{},[268,513,514,519,523,527],{},[298,515,516],{},[274,517,518],{},"12",[298,520,521],{},[306,522,313],{},[298,524,525],{},[306,526,313],{},[298,528,529],{},"ESP32 не завантажується, якщо вхід підтягнутий до HIGH, що з'єднує контакт",[268,531,532,537,541,545],{},[298,533,534],{},[274,535,536],{},"13",[298,538,539],{},[306,540,313],{},[298,542,543],{},[306,544,313],{},[298,546],{},[268,548,549,554,558,562],{},[298,550,551],{},[274,552,553],{},"14",[298,555,556],{},[306,557,313],{},[298,559,560],{},[306,561,313],{},[298,563,316],{},[268,565,566,571,575,579],{},[298,567,568],{},[274,569,570],{},"15",[298,572,573],{},[306,574,313],{},[298,576,577],{},[306,578,313],{},[298,580,316],{},[268,582,583,588,592,596],{},[298,584,585],{},[274,586,587],{},"16",[298,589,590],{},[306,591,313],{},[298,593,594],{},[306,595,313],{},[298,597],{},[268,599,600,605,609,613],{},[298,601,602],{},[274,603,604],{},"17",[298,606,607],{},[306,608,313],{},[298,610,611],{},[306,612,313],{},[298,614],{},[268,616,617,622,626,630],{},[298,618,619],{},[274,620,621],{},"18",[298,623,624],{},[306,625,313],{},[298,627,628],{},[306,629,313],{},[298,631],{},[268,633,634,639,643,647],{},[298,635,636],{},[274,637,638],{},"19",[298,640,641],{},[306,642,313],{},[298,644,645],{},[306,646,313],{},[298,648],{},[268,650,651,656,660,664],{},[298,652,653],{},[274,654,655],{},"21",[298,657,658],{},[306,659,313],{},[298,661,662],{},[306,663,313],{},[298,665],{},[268,667,668,673,677,681],{},[298,669,670],{},[274,671,672],{},"22",[298,674,675],{},[306,676,313],{},[298,678,679],{},[306,680,313],{},[298,682],{},[268,684,685,690,694,698],{},[298,686,687],{},[274,688,689],{},"23",[298,691,692],{},[306,693,313],{},[298,695,696],{},[306,697,313],{},[298,699],{},[268,701,702,707,711,715],{},[298,703,704],{},[274,705,706],{},"25",[298,708,709],{},[306,710,313],{},[298,712,713],{},[306,714,313],{},[298,716],{},[268,718,719,724,728,732],{},[298,720,721],{},[274,722,723],{},"26",[298,725,726],{},[306,727,313],{},[298,729,730],{},[306,731,313],{},[298,733],{},[268,735,736,741,745,749],{},[298,737,738],{},[274,739,740],{},"27",[298,742,743],{},[306,744,313],{},[298,746,747],{},[306,748,313],{},[298,750],{},[268,752,753,758,762,766],{},[298,754,755],{},[274,756,757],{},"32",[298,759,760],{},[306,761,313],{},[298,763,764],{},[306,765,313],{},[298,767],{},[268,769,770,775,779,783],{},[298,771,772],{},[274,773,774],{},"33",[298,776,777],{},[306,778,313],{},[298,780,781],{},[306,782,313],{},[298,784],{},[268,786,787,792,796,798],{},[298,788,789],{},[274,790,791],{},"34",[298,793,794],{},[306,795,313],{},[298,797],{},[298,799,800],{},[306,801,802],{},"лише вхід",[268,804,805,810,814,816],{},[298,806,807],{},[274,808,809],{},"35",[298,811,812],{},[306,813,313],{},[298,815],{},[298,817,818],{},[306,819,802],{},[268,821,822,827,831,833],{},[298,823,824],{},[274,825,826],{},"36",[298,828,829],{},[306,830,313],{},[298,832],{},[298,834,835],{},[306,836,802],{},[268,838,839,844,848,850],{},[298,840,841],{},[274,842,843],{},"39",[298,845,846],{},[306,847,313],{},[298,849],{},[298,851,852],{},[306,853,802],{},[218,855,113],{"id":856},"піни-входу",[202,858,859],{},"GPIOs 34-39 є GPI - тобто працюють тільки в режимі введення, так як вони не оснащені резистором, що підтягує.",[222,861,862,865,868,871],{},[225,863,864],{},"GPIO 34",[225,866,867],{},"GPIO 35",[225,869,870],{},"GPIO 36",[225,872,873],{},"GPIO 39",[218,875,118],{"id":876},"spi-flash-на-esp-wroom-32",[202,878,879],{},"GPIO з 6 по 11 мають контакти на деяких платах розробки ESP32, але ці контакти приєднані до вбудованого модуля SPI flash на чіпі ESP-WROOM-32 і не рекомендується використовувати їх з іншою метою.",[222,881,882,885,888,891,894,897],{},[225,883,884],{},"GPIO 6 (SCK/CLK)",[225,886,887],{},"GPIO 7 (SDO/SD0)",[225,889,890],{},"GPIO 8 (SDI/SD1)",[225,892,893],{},"GPIO 9 (SHD/SD2)",[225,895,896],{},"GPIO 10 (SWP/SD3)",[225,898,899],{},"GPIO 11 (CSC/CMD)",[218,901,123],{"id":902},"gpio-з-підтримкою-ємнісного-дотику",[202,904,905],{},"ESP32 обладнана 10 ємнісними сенсорами торкання. Ці датчики можуть вловлювати зміни у будь-чому, що має електричний заряд, наприклад, у шкірі людини. Таким чином, вони можуть виявляти зміни, що виникають при дотику пальцем контактів GPIO. Ці контакти легко інтегруються в ємнісні контактні майданчики та замінюють механічні кнопки. Ємнісні сенсорні контакти можна використовувати для виведення ESP32 з режиму глибокого сну.\nЦі внутрішні датчики торкання підключені до цих контактів GPIO:",[222,907,908,911,914,917,920,923,926,929,932,935],{},[225,909,910],{},"T0 (GPIO 4)",[225,912,913],{},"T1 (GPIO 0)",[225,915,916],{},"T2 (GPIO 2)",[225,918,919],{},"T3 (GPIO 15)",[225,921,922],{},"T4 (GPIO 13)",[225,924,925],{},"T5 (GPIO 12)",[225,927,928],{},"T6 (GPIO 14)",[225,930,931],{},"T7 (GPIO 27)",[225,933,934],{},"T8 (GPIO 33)",[225,936,937],{},"T9 (GPIO 32)",[218,939,128],{"id":940},"аналого-цифровий-перетворювач-ацп",[202,942,943],{},"ESP32 має 18 вхідних 12-бітових каналів АЦП (тоді як ESP8266 має лише 1 10-бітний АЦП). Нижче перераховані GPIO, які можна використовувати як АЦП, і з відповідні канали:",[222,945,946,949,952,955,958,961,964,967,970,973,976,979,982,985,988,991,994,997],{},[225,947,948],{},"ADC1_CH0 (GPIO 36)",[225,950,951],{},"ADC1_CH1 (GPIO 37)",[225,953,954],{},"ADC1_CH2 (GPIO 38)",[225,956,957],{},"ADC1_CH3 (GPIO 39)",[225,959,960],{},"ADC1_CH4 (GPIO 32)",[225,962,963],{},"ADC1_CH5 (GPIO 33)",[225,965,966],{},"ADC1_CH6 (GPIO 34)",[225,968,969],{},"ADC1_CH7 (GPIO 35)",[225,971,972],{},"ADC2_CH0 (GPIO 4)",[225,974,975],{},"ADC2_CH1 (GPIO 0)",[225,977,978],{},"ADC2_CH2 (GPIO 2)",[225,980,981],{},"ADC2_CH3 (GPIO 15)",[225,983,984],{},"ADC2_CH4 (GPIO 13)",[225,986,987],{},"ADC2_CH5 (GPIO 12)",[225,989,990],{},"ADC2_CH6 (GPIO 14)",[225,992,993],{},"ADC2_CH7 (GPIO 27)",[225,995,996],{},"ADC2_CH8 (GPIO 25)",[225,998,999],{},"ADC2_CH9 (GPIO 26)",[202,1001,1002],{},"Примітка: контакти АЦП2 не можна використовувати під час використання Wi-Fi. Тому, якщо ви використовуєте Wi-Fi і у вас виникають проблеми з отриманням значення з виходу АЦП2 GPIO, спробуйте використати замість нього вихід АЦП1 GPIO — це має вирішити проблему.",[202,1004,1005],{},"Вхідні канали АЦП мають роздільну здатність 12 біт. Це означає, що ви можете отримувати аналогові показання в діапазоні від 0 до 4095, де 0 відповідає 0, а 4095 - 3,3 В. Ви також можете задати дозвіл каналів в коді, а також діапазон АЦП.",[202,1007,1008],{},"Висновки АЦП ESP32 немає лінійного поведінки. Ви, ймовірно, не зможете відрізнити 0 від 0,1 або 3,2 від 3,3 В. Це необхідно враховувати при використанні контактів АЦП. Ви отримаєте поведінку, схожу на показану на наступному малюнку.",[218,1010,133],{"id":1011},"цифро-аналоговий-перетворювач-цап",[202,1013,1014],{},"ESP32 має два 8-бітових канали ЦАП для перетворення цифрових сигналів в аналогові вихідні сигнали напруги. Канали ЦАП:",[222,1016,1017,1020],{},[225,1018,1019],{},"DAC1 (GPIO25)",[225,1021,1022],{},"DAC2 (GPIO26)",[218,1024,138],{"id":1025},"rtc-gpios",[202,1027,1028],{},"ESP32 підтримує RTC GPIO. Висновки GPIO, підключені до RTC з низьким енергоспоживанням, можуть використовуватися, коли ESP32 знаходиться в режимі глибокого сну. Ці RTC GPIO можна використовувати для виведення ESP32 із режиму глибокого сну під час роботи співпроцесора з ультранизким енергоспоживанням (ULP). Наступні контакти GPIO можна використовувати як зовнішнє джерело пробудження:",[222,1030,1031,1034,1037,1040,1043,1046,1049,1052,1055,1058,1061,1064,1067,1070,1073,1076],{},[225,1032,1033],{},"RTC_GPIO0 (GPIO36)",[225,1035,1036],{},"RTC_GPIO3 (GPIO39)",[225,1038,1039],{},"RTC_GPIO4 (GPIO34)",[225,1041,1042],{},"RTC_GPIO5 (GPIO35)",[225,1044,1045],{},"RTC_GPIO6 (GPIO25)",[225,1047,1048],{},"RTC_GPIO7 (GPIO26)",[225,1050,1051],{},"RTC_GPIO8 (GPIO33)",[225,1053,1054],{},"RTC_GPIO9 (GPIO32)",[225,1056,1057],{},"RTC_GPIO10 (GPIO4)",[225,1059,1060],{},"RTC_GPIO11 (GPIO0)",[225,1062,1063],{},"RTC_GPIO12 (GPIO2)",[225,1065,1066],{},"RTC_GPIO13 (GPIO15)",[225,1068,1069],{},"RTC_GPIO14 (GPIO13)",[225,1071,1072],{},"RTC_GPIO15 (GPIO12)",[225,1074,1075],{},"RTC_GPIO16 (GPIO14)",[225,1077,1078],{},"RTC_GPIO17 (GPIO27)",[218,1080,143],{"id":1081},"широтно-імпульсна-модуляція-шім",[202,1083,1084],{},"Контролер світлодіодів ESP32 із ШІМ має 16 незалежних каналів, які можна налаштувати для генерації ШІМ-сигналів із різними характеристиками. Усі контакти, які можуть працювати як виходи, можуть використовуватися як контакти ШІМ (контакти GPIO з 34 до 39 не підтримують генерацію ШІМ).",[202,1086,1087],{},"Для встановлення ШИМ-сигналу необхідно визначити такі параметри в коді:",[222,1089,1090,1093,1096,1099],{},[225,1091,1092],{},"частота сигналу;",[225,1094,1095],{},"коефіцієнт заповнення;",[225,1097,1098],{},"канал ШІМ;",[225,1100,1101],{},"Порт GPIO, який ви хочете подати сигнал.",[218,1103,148],{"id":1104},"i2c",[202,1106,1107],{},"При використанні ESP32 з Arduino IDE слід використовувати стандартні контакти ESP32 I2C (підтримувані бібліотекою Wire):",[222,1109,1110,1113],{},[225,1111,1112],{},"GPIO 21 (SDA)",[225,1114,1115],{},"GPIO 22 (SCL)",[218,1117,153],{"id":1118},"serial-peripheral-interface-spi",[202,1120,1121],{},"За промовчанням призначення контактів для SPI:",[262,1123,1124,1153],{},[265,1125,1126],{},[268,1127,1128,1133,1138,1143,1148],{},[271,1129,1130],{},[274,1131,1132],{},"SPI",[271,1134,1135],{},[274,1136,1137],{},"MOSI",[271,1139,1140],{},[274,1141,1142],{},"MISO",[271,1144,1145],{},[274,1146,1147],{},"CLK",[271,1149,1150],{},[274,1151,1152],{},"CS",[293,1154,1155,1174],{},[268,1156,1157,1162,1165,1168,1171],{},[298,1158,1159],{},[274,1160,1161],{},"VSPI",[298,1163,1164],{},"GPIO 23",[298,1166,1167],{},"GPIO 19",[298,1169,1170],{},"GPIO 18",[298,1172,1173],{},"GPIO 5",[268,1175,1176,1181,1184,1187,1190],{},[298,1177,1178],{},[274,1179,1180],{},"HSPI",[298,1182,1183],{},"GPIO 13",[298,1185,1186],{},"GPIO 12",[298,1188,1189],{},"GPIO 14",[298,1191,1192],{},"GPIO 15",[1194,1195,158],"h1",{"id":1196},"uart",[202,1198,1199],{},"ESP32 підтримує до трьох інтерфейсів UART: UART0, UART1 і UART2, залежно від моделі плати ESP32, що використовується.",[202,1201,1202],{},"Порт UART0 зазвичай резервується для зв'язку з послідовним монітором під час завантаження та налагодження. Однак його також можна використовувати для зв'язку з іншими пристроями після завантаження коду, якщо монітор не потрібен.\nUART1 та UART2: доступні для зв'язку із зовнішніми пристроями.\nЯк і I2C і SPI, ці контакти UART можна призначити будь-якому контакту GPIO ESP32. Однак, на більшості моделей плат вони мають стандартне призначення контактів.\nДля більшості плат ESP32 призначення контактів UART є наступним:",[262,1204,1205,1221],{},[265,1206,1207],{},[268,1208,1209,1212,1215,1218],{},[271,1210,1211],{},"UART Port",[271,1213,1214],{},"TX",[271,1216,1217],{},"RX",[271,1219,1220],{},"Remarks",[293,1222,1223,1237,1251],{},[268,1224,1225,1228,1231,1234],{},[298,1226,1227],{},"UART0",[298,1229,1230],{},"GPIO 1",[298,1232,1233],{},"GPIO 3",[298,1235,1236],{},"Used for Serial Monitor and uploading code; Can be assigned to other GPIOs;",[268,1238,1239,1242,1245,1248],{},[298,1240,1241],{},"UART1",[298,1243,1244],{},"GPIO 10",[298,1246,1247],{},"GPIO 9",[298,1249,1250],{},"Must be assigned to other GPIOs",[268,1252,1253,1256,1259,1262],{},[298,1254,1255],{},"UART2",[298,1257,1258],{},"GPIO 17",[298,1260,1261],{},"GPIO 16",[298,1263,1264],{},"Can be assigned to other GPIOs",[202,1266,1267],{},"Що стосується UART1 (GPIO 9 і GPIO10), ці контакти GPIO підключені до флеш-пам'яті ESP32 SPI, тому використовувати їх не можна. Щоб використати UART1 для зв'язку з іншими пристроями, необхідно визначити інші контакти за допомогою бібліотеки HardwareSerial.",[218,1269,163],{"id":1270},"переривання",[202,1272,165],{},[218,1274,168],{"id":1275},"звязувальні-контакти",[202,1277,1278],{},"Чіп ESP32 має такі зв'язувальні контакти:",[222,1280,1281,1284,1287,1290,1292,1294],{},[225,1282,1283],{},"GPIO 0",[225,1285,1286],{},"GPIO 2",[225,1288,1289],{},"GPIO 4",[225,1291,1173],{},[225,1293,1186],{},[225,1295,1192],{},[202,1297,1298],{},"Вони використовуються для переведення ESP32 у режим завантажувача або прошивки. На більшості плат з вбудованим USB/послідовним портом вам не потрібно турбуватися про стан цих контактів. Плата сама переводить контакти в стан, необхідний для прошивки чи завантаження. Докладніше про вибір режиму завантаження ESP32 можна дізнатися тут.",[202,1300,1301],{},"Однак, якщо до цих контактів підключено периферійні пристрої, можуть виникнути проблеми із завантаженням нового коду, прошивкою ESP32 або скиданням налаштувань плати. Якщо до цих контактів підключено периферійні пристрої, і виникають проблеми із завантаженням коду або прошивкою ESP32, можливо, ці пристрої заважають ESP32 перейти в потрібний режим. Ознайомтеся з документацією щодо вибору режиму завантаження, щоб дізнатися, як це зробити. Після скидання налаштувань, прошивки або завантаження ці контакти працюють як слід.",[218,1303,173],{"id":1304},"контакти-high-при-завантаженні",[202,1306,1307],{},"Деякі GPIO змінюють стан на HIGH або виводять ШИМ-сигнали під час завантаження чи скидання. Це означає, що якщо до цих GPIO підключені виходи, ви можете отримати несподівані результати під час скидання або завантаження ESP32.",[222,1309,1310,1312,1314,1316,1319,1321],{},[225,1311,1230],{},[225,1313,1233],{},[225,1315,1173],{},[225,1317,1318],{},"GPIO 6–GPIO 11 (підключений до інтегрованої флеш-пам'яті SPI ESP32 – не рекомендується використовувати).",[225,1320,1189],{},[225,1322,1192],{},[218,1324,178],{"id":1325},"enable-en",[202,1327,180],{},[218,1329,183],{"id":1330},"потужний-струм-gpio",[202,1332,185],{},[218,1334,188],{"id":1335},"вбудований-датчик-холла-esp32",[202,1337,190],{},[218,1339,58],{"id":1340},"на-завершення",[202,1342,194],{},{"title":1344,"searchDepth":15,"depth":15,"links":1345},"",[1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362],{"id":220,"depth":15,"text":108},{"id":856,"depth":15,"text":113},{"id":876,"depth":15,"text":118},{"id":902,"depth":15,"text":123},{"id":940,"depth":15,"text":128},{"id":1011,"depth":15,"text":133},{"id":1025,"depth":15,"text":138},{"id":1081,"depth":15,"text":143},{"id":1104,"depth":15,"text":148},{"id":1118,"depth":15,"text":153},{"id":1270,"depth":15,"text":163},{"id":1275,"depth":15,"text":168},{"id":1304,"depth":15,"text":173},{"id":1325,"depth":15,"text":178},{"id":1330,"depth":15,"text":183},{"id":1335,"depth":15,"text":188},{"id":1340,"depth":15,"text":58},"2025-09-04T00:00:00.000Z",[1365],"ESP32",[1367],{"name":1368,"avatar":1369},"Niqitos","/images/avatars/niqitos.jpg",12,{"title":103,"description":197,"alternate":1372},[1373,1375],{"en":1374},"4-esp32-pinout",{"ru":1376},"4-raspinovka-esp32",1757266259835]